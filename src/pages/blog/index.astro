---
import BaseHead from "../../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import {
  getCollection,
  type CollectionEntry,
  type CollectionKey,
} from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import type {} from "astro:content";
import Navigation from "../../components/Navigation.astro";
import "@fontsource/geist-mono";

const posts = (await getCollection("blog")).sort(
  (a: CollectionEntry<CollectionKey>, b: CollectionEntry<CollectionKey>) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <div
      class="min-h-screen bg-black text-zinc-300 p-8 font-mono flex justify-center"
    >
      <div class="w-full max-w-4xl">
        {/* Navigation */}
        <Navigation />

        {/* Blog Header */}
        <h1
          class="border-l-2 pl-4 -ml-5 border-emerald-500 text-4xl font-bold mb-8 flex items-center"
        >
          Blog
        </h1>

        {/* Keyboard Navigation Hint */}
        {
          /*
        <p class="text-zinc-500 mb-8 text-sm items-center flex gap-1">
          press <kbd
            class="border border-zinc-700 px-1.5 py-0.5 rounded text-zinc-400"
            >/</kbd
          > to search • use{" "}
          <kbd
            class="border border-zinc-700 px-1.5 py-0.5 rounded text-zinc-400"
            >ctrl / ⌘ j</kbd
          > and{" "}
          <kbd
            class="border border-zinc-700 px-1.5 py-0.5 rounded text-zinc-400"
            >ctrl / ⌘ k</kbd
          > or{" "}
          <span class="inline-flex items-center gap-1">
            <svg
              class="w-4 h-4"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m5 12l7-7l7 7m-7 7V5"></path>
            </svg>
          </span> and{" "}
          <span class="inline-flex items-center gap-1">
            <svg
              class="w-4 h-4"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 5v14m7-7l-7 7l-7-7"></path>
            </svg>
          </span> to navigate
        </p>
*/
        }

        {/* Blog Posts List */}
        <div class="space-y-4">
          {
            posts.map((post) => (
              <div class="flex justify-between hover:text-white">
                <a href={`/blog/${post.id}`}>{post.data.title}</a>
                <span class="text-zinc-600">
                  <FormattedDate date={post.data.pubDate} />
                </span>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </body>
</html>
